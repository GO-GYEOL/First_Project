atom에서 사용할 수 있도록 memo 데이터 구조 만들다보니 여느 api에서 보이는 json 구조를 띄게 되었음.  순서가 필요할 땐 객체를 사용할 수 없다는걸 알았다. dnd같은 경우 드래그를 통해 순서를 바꿔줘야하므로 배열형태로 만드는 것이 맞는 것 같다.
이전에 ellie 가 알려준 방법은 순서를 바꿔야 하는 경우에 사용할 수 없음. 

onDragEnd에서
// 배열 내부 객체의 속성명이 특정값과 매칭되는 객체 선택하는 방법....
const board = memoCopy.filter((x) => Object.keys(x).toString() == source.droppableId)[0];

board끼리 이동
key에 index를 넣어주었다가 계속 문제 발생했음. 그래서 board끼리 두번 이상으로 움직이면 오류났었음. 로직 문제인 줄 알고 3일은 헤맸음.


같은 board 내 card 이동
map하려면 const 해서 변수명 지정해줘야되네. ref 자체 안건드림. 그냥 하나의 변수를 깊은복사 해버리는 것임. 그리고 return을 통해 그 깊은복사된 변수를 조작하는 것이고. 그래서 const 해서 변수명 지정해줘야 쓸 수 있다. 


card 추가 기능
// 아 이전에 footer에서 했던 방식대로 하면 안되는 이유! 전개연산자 사용해서 참조형 데이터 복사하는건 깊은 복사이지만 반쪽짜리 깊은 복사이다. 첫번째 층만 깊은 복사를 하고 그 다음층은 얕은복사를 한다. 그래서 footer에서는 첫번째 층만 건드리니 상관 없었으나, 여기선 card 즉 두번째 층까지 건드리니 전개연산자를 한번 더 써줘야한다.

중첩 라우팅

recoil로 유저 정보 관리


(22.07.27)
App.jsx 
유저정보 파이어베이스랑 연동 방식 바꿨다. recoil로 유저정보 저장함.
  // 유저 정보
  const [userInfo, setUserInfo] = useRecoilState(loginState);
  useEffect(() => {
    const auth = getAuth();
    // onAuthStateChanged 사용했다. user 정보 바뀔때마다 또는 처음에 정보 전달해준다. 
    onAuthStateChanged(auth, (user) =>
      setUserInfo({
        userName: user.displayName,
        photoURL: user.photoURL,
        uid: user.uid,
      })
    );
  }, []);
  // 로그아웃 버튼 추가
  // 댓글 실시간 연동, 스크롤 추가
  // 카드 삭제기능, 그 외(컨텐츠 버튼 수정, card_detail ui 수정), comment 삭제버튼 추가필요


(22-07-28)
card_detail.jsx
댓글 삭제기능 중
    // 데이터의 하위배열요소를 따로 변수 저장하면 새로운 ref에 복사가 되나봄. comments 바꾼다고 dataCopy의 하위배열이 바뀌지 않는다.
    // 참조형변수는 메모리의 주소가 같냐를 따지기 때문에 객체의 value를 비교하고 싶다면 기본형변수로 만들고 비교해주는 것이 좋다.

App.jsx
// 로그인 없이 home 접근 방지. navigate를 쓰려면

Login.jsx
// 로그인 ui 변경, 게스트로그인 추가

memoCard.jsx
// 카드에 유저이름과 사진 표시되도록 함.

header.jsx
// 보드 수정 버튼과 input UI 변경

// 새로고침 시 로그인 풀리는 버그 발생